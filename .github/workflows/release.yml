name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release (${{ matrix.os }} â€¢ ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            target: universal-apple-darwin
            arch: universal
            rust-targets: x86_64-apple-darwin,aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x64
            rust-targets: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            arch: arm64
            rust-targets: aarch64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: x86_64
            rust-targets: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            arch: arm64
            rust-targets: aarch64-unknown-linux-gnu
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install cross toolchain (Ubuntu x64)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y \
            g++-aarch64-linux-gnu \
            pkg-config-aarch64-linux-gnu

      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          profile: minimal
          override: true
          targets: ${{ matrix.rust-targets }}

      - name: Install frontend dependencies
        run: npm ci

      - name: Build and publish installers
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: Marlin ${{ github.ref_name }}
          releaseBody: |
            Automated binaries for Marlin. Download the installer matching your platform.
          releaseDraft: false
          prerelease: ${{ startsWith(github.ref_name, 'v0.') }}
          args: --target ${{ matrix.target }}
